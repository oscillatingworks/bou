#!/bin/bash

set -ex

# create tmp user
useradd -m -d /home/tmp tmp || sed -i '$ d' /etc/sudoers
echo "tmp ALL=(ALL) NOPASSWD:ALL" >>/etc/sudoers

# enable all Ubuntu repositories
add-apt-repository universe -yn
add-apt-repository multiverse -yn

# latest git
apt-add-repository ppa:git-core/ppa -yn

# latest vim
add-apt-repository ppa:jonathonf/vim -yn

# latest terminator
add-apt-repository ppa:mattrose/terminator -yn

# bashtop
add-apt-repository ppa:bashtop-monitor/bashtop -yn

# dev tools
apt update
apt install -y \
  build-essential \
  software-properties-common \
  apt-transport-https \
  zsh \
  git \
  vim \
  terminator \
  htop \
  bashtop \
  jq \
  restic \
  node-typescript \
  telnet \
  tmux

# docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable" -y
apt install docker-ce -y
groupadd -f docker

# go
GOVERSION="1.15.7"
wget -nc https://golang.org/dl/go$GOVERSION.linux-amd64.tar.gz -O /tmp/go$GOVERSION.linux-amd64.tar.gz || true
tar -C /usr/local -xzf /tmp/go$GOVERSION.linux-amd64.tar.gz

if ! grep -qF "export PATH=$PATH:/usr/local/go/bin" /etc/environment; then
  echo "export PATH=$PATH:/usr/local/go/bin" >> /etc/environment
fi

# homebrew for linux
if [ ! -d "/home/linuxbrew/.linuxbrew" ] ; then
  su - tmp -s /bin/bash -c "NONINTERACTIVE=1 $(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  cp -r /home/linuxbrew/.linuxbrew /etc/skel/; rm -rf /home/linuxbrew
  mkdir -p /etc/skel/.cache; cp -r /home/tmp/.cache/Homebrew /etc/skel/.cache
fi

# oh-my-zsh
if [ ! -d "/home/tmp/.oh-my-zsh" ] ; then
  su - tmp -s /bin/bash -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh) --unattended --keep-zshrc" | grep "Run zsh to try it out."
  cp /usr/share/bou/cubic/files/config/zsh /etc/skel/.zshrc
  cp -r /home/tmp/.oh-my-zsh /etc/skel/
fi

# dev-tld-resolver
if [ ! -d "/usr/local/dev-tld-resolver" ] ; then
  git clone https://github.com/mnishihan/dev-tld-resolver.git /usr/local/dev-tld-resolver
  cd /usr/local/dev-tld-resolver/src && make
  make install

  if ! grep -qF "DEV_TLD_DOMAINS" /etc/environment; then
    echo "DEV_TLD_DOMAINS=test" >> /etc/environment
  fi

  sed 's/^\(hosts:  *files\) \(mdns4_minimal\)/\1 dev_tld \2/' -i /etc/nsswitch.conf
fi

# vs code
wget -q -O - https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
add-apt-repository \
  "deb [arch=amd64] https://packages.microsoft.com/repos/code stable main" \
  -y
apt install code -y
rm /etc/apt/sources.list.d/vscode.list* || true

# google chrome
wget --no-check-certificate -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
add-apt-repository \
  "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" \
  -y
apt install google-chrome-stable
rm /etc/apt/sources.list.d/google-chrome.list || true

# spotify
curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | apt-key add -
add-apt-repository \
  "deb http://repository.spotify.com stable non-free" \
  -y
apt install spotify-client -y

# other tools or dependencies
apt install -y \
  peek \
  xclip \
  cowsay \
  neofetch \
  ffmpeg \
  tree \
  laptop-mode-tools \
  zlib1g-dev

# update all
apt update
apt dist-upgrade -y

# clean up tmp user
userdel -r tmp
sed -i '$ d' /etc/sudoers
